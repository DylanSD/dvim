plugins {
    id 'java'
    id 'application'
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id 'org.graalvm.buildtools.native' version '0.10.6'
}

group = 'com.dksd.dvim'
version = '0.1.0'

mainClassName = 'com.dksd.dvim.Main'

repositories {
    mavenCentral()
}

application {
    mainClassName = project.hasProperty("mainClass") ? project.getProperty("mainClass") : "NULL"
    mainClass = "com.dksd.dvim.Main"
}

dependencies {

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.13'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-reload4j
    //implementation group: 'org.slf4j', name: 'slf4j-reload4j', version: '2.0.13'

    implementation group: 'com.googlecode.lanterna', name: 'lanterna', version: '3.1.3'
    implementation 'com.catppuccin:catppuccin-palette:1.0.0'
    implementation 'de.gesundkrank.fzf4j:fzf4j:0.2.0'
    implementation 'org.buildobjects:jproc:2.8.2'

// https://mvnrepository.com/artifact/io.github.tree-sitter/jtreesitter
    //implementation("io.github.tree-sitter:jtreesitter:0.25.4")

    //implementation 'ch.usi.si.seart:java-tree-sitter:1.12.0'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.11.0'


    // If you do not explicitly declare a version it will build
    // the dependency and use that version. If you do declare a version,
    // and that version exists in one of the repositories it will be used,
    // otherwise the dependent project will be built and that version will
    // be used.
    //implementation 'example.gcb.gregwhitaker:project-b'
}

test {
  useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class': 'com.dksd.dvim.Main'
    }
}
